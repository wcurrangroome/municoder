[{"path":"https://wcurrangroome.github.io/municoder/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 municoder authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://wcurrangroome.github.io/municoder/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Curran-Groome. Author, maintainer.","code":""},{"path":"https://wcurrangroome.github.io/municoder/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Curran-Groome W (2025). municoder: Interface municode.com API. R package version 0.0.0.9000, https://wcurrangroome.github.io/municoder/.","code":"@Manual{,   title = {municoder: Interface to the municode.com API},   author = {Will Curran-Groome},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://wcurrangroome.github.io/municoder/}, }"},{"path":"https://wcurrangroome.github.io/municoder/index.html","id":"municoder","dir":"","previous_headings":"","what":"Interface to the municode.com API","title":"Interface to the municode.com API","text":"goal municoder allow users programmatically navigate municode.com API, including ordinances hosted therein.","code":""},{"path":"https://wcurrangroome.github.io/municoder/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interface to the municode.com API","text":"can install development version library(municoder) like : Check spatial coverage municode.com-listed ordinances Explore ordinance’s table contents (TOC): finally pull text individual sections ordinance. can see “Purpose” statements Alexandria’s residential zones tell us quite bit rationale zone. example, might notice RMF zone zone “Purpose” statement refers housing affordability–raising question Alexandria’s zones aren’t also designed housing affordability–also zone “Purpose” explicitly refer cap unit density.","code":"renv::install(\"wcurrangroome/municoder\") all_states = municoder::get_states()  all_clients = all_states %>%   dplyr::pull(state_abbreviation) %>%   purrr::discard(~ str_detect(.x, \"Tribes\")) %>% ## \"Tribes\" throws an error for some reason   purrr::map_dfr(~ get_clients_in_state(.x))  states_sf = tigris::states(cb = TRUE, progress_bar = FALSE) %>%   dplyr::filter(GEOID < 60) %>%   tigris::shift_geometry() %>%   dplyr::left_join(     all_clients %>% dplyr::count(state_abbreviation),     by = c(\"STUSPS\" = \"state_abbreviation\")) #> Retrieving data for the year 2021  states_sf %>%    ggplot2::ggplot() +   ggplot2::geom_sf(ggplot2::aes(fill = n)) +   ggplot2::geom_sf(data = states_sf %>% dplyr::filter(n == 0), fill = \"lightgrey\") +   ggplot2::labs(     title = \"municode.com Has Coverage across All 51 States\",     subtitle = \"Number of entities listed on municode.com, by state\",     fill = \"Entities with ordinances on municode.com\" %>% str_wrap(30)) +   ggplot2::scale_fill_continuous(trans = \"reverse\") +   urbnthemes::theme_urbn_map() ## this gives us the client_id alexandria_client_id = all_clients %>%   dplyr::filter(state_name == \"Virginia\", client_name == \"Alexandria\") %>%   dplyr::pull(client_id)  ## this gives us `product_name`s and associated `product_id`s alexandria_zoning_product_id = municoder::get_client_content(alexandria_client_id) %>%   dplyr::filter(product_name == \"Zoning\") %>%   dplyr::pull(product_id)  alexandria_zoning_job_id = municoder::get_jobs_latest(product_id = alexandria_zoning_product_id) %>%   dplyr::pull(id)  ## this gives us `id`s for each primary component of the zoning ordinance municoder::get_codes_toc(   job_id = alexandria_zoning_job_id,    product_id = alexandria_zoning_product_id) #> # A tibble: 17 × 7 #>    toc_id toc_heading id             heading     has_children parent_id children #>    <chr>  <chr>       <chr>          <chr>       <lgl>        <chr>     <lgl>    #>  1 12429  Zoning      THZOORALVI     THE ZONING… FALSE        12429     NA       #>  2 12429  Zoning      SUHITA         Supplement… FALSE        12429     NA       #>  3 12429  Zoning      ARTIGERE       ARTICLE I.… TRUE         12429     NA       #>  4 12429  Zoning      ARTIIDE        ARTICLE II… TRUE         12429     NA       #>  5 12429  Zoning      ARTIIIREZORE   ARTICLE II… TRUE         12429     NA       #>  6 12429  Zoning      ARTIVCOOFINZO  ARTICLE IV… TRUE         12429     NA       #>  7 12429  Zoning      ARTVMIUSZO     ARTICLE V.… TRUE         12429     NA       #>  8 12429  Zoning      ARTVISPOVZO    ARTICLE VI… TRUE         12429     NA       #>  9 12429  Zoning      ARTVIISUZORE   ARTICLE VI… TRUE         12429     NA       #> 10 12429  Zoning      ARTVIIIOREPALO ARTICLE VI… TRUE         12429     NA       #> 11 12429  Zoning      ARTIXSI        ARTICLE IX… TRUE         12429     NA       #> 12 12429  Zoning      ARTXHIDIBU     ARTICLE X.… TRUE         12429     NA       #> 13 12429  Zoning      ARTXIDEAPPR    ARTICLE XI… TRUE         12429     NA       #> 14 12429  Zoning      ARTXIINONO     ARTICLE XI… TRUE         12429     NA       #> 15 12429  Zoning      ARTXIIIENMA    ARTICLE XI… TRUE         12429     NA       #> 16 12429  Zoning      APXAZOMAAM     APPENDIX A… FALSE        12429     NA       #> 17 12429  Zoning      TAAM           TABLE OF A… FALSE        12429     NA municoder::get_codes_content(     product_id = alexandria_zoning_product_id,      node_id = \"ARTIIIREZORE\") %>%   dplyr::pull(id) %>%   purrr::map_dfr(~ get_codes_content(product_id = alexandria_zoning_product_id, node_id = .x)) %>%   dplyr::filter(     !is.na(content),     stringr::str_detect(heading, \"Purpose\")) %>%   dplyr::pull(content) #>  [1] \" The R-20 zone is established to provide and maintain land areas for low density residential neighborhoods of single-unit, two-unit, and multi-unit up to four units dwellings on 20,000 square foot lots. Nonresidential uses of a noncommercial nature which are related to, supportive of and customarily found in a residential neighborhood are also permitted. \"                 #>  [2] \" The R-12 zone is established to provide and maintain land areas for low density residential neighborhoods of single-unit, two-unit, and multi-unit up to four units dwellings on 12,000 square foot lots. Nonresidential uses of a noncommercial nature which are related to, supportive of and customarily found in a residential neighborhood are also permitted. \"                 #>  [3] \" The R-8 zone is established to provide and maintain land areas for low density residential neighborhoods of single-unit, two-unit, and multi-unit up to four units dwellings on 8,000 square foot lots. Nonresidential uses of a noncommercial nature which are related to, supportive of and customarily found in a residential neighborhood are also permitted. \"                   #>  [4] \" The R-5 zone is established to provide and maintain land areas for low density residential neighborhoods of single-unit, two-unit, and multi-unit up to four units dwellings on 5,000 square foot lots. Nonresidential uses of a noncommercial nature which are related to, supportive of and customarily found in a residential neighborhood are also permitted. \"                   #>  [5] \" The R-2-5 zone is established to provide and maintain land areas for low density residential neighborhoods of single-unit, two-unit, and multi-unit up to four units dwellings on 5,000 square foot lots. Nonresidential uses of a noncommercial nature which are related to, supportive of and customarily found in a residential neighborhood are also permitted. \"                 #>  [6] \" The RA zone is established to provide and maintain land areas for medium density residential neighborhoods in which apartments predominate and in which single-unit, two-unit and townhouse development is permitted. Nonresidential uses of a noncommercial nature which are related to, supportive of and customarily found in such residential neighborhoods are also permitted. \" #>  [7] \" The RB zone is established to provide and maintain land areas for medium density residential neighborhoods in which single-unit, two-unit, and townhouse dwellings are permitted. Nonresidential uses of a noncommercial nature which are related to, supportive of and customarily found in such residential neighborhoods are also permitted. \"                                     #>  [8] \" The RCX zone is established to provide and maintain land areas for medium density apartment buildings and to permit limited commercial uses in such structures. Nonresidential uses of a noncommercial nature which are related to, supportive of and customarily found in such residential neighborhoods are also permitted. \"                                                       #>  [9] \" The RC zone is established to provide and maintain land areas for high density apartment buildings and to permit limited commercial uses in such structures. Nonresidential uses of a noncommercial nature which are related to, supportive of and customarily found in such residential neighborhoods are also permitted. \"                                                          #> [10] \" The RM zone is established to provide and maintain land areas for medium density residential neighborhoods of single-unit, two-unit and townhouse dwellings. Nonresidential uses of a noncommercial nature which are related to, supportive of and customarily found in such residential neighborhoods are also permitted. \"                                                          #> [11] \" The RS zone is established to provide land areas for low to medium density townhouse development of approximately 15 units per acre which may be appropriate for infill sites in proximity to neighborhoods of single-family detached homes. \"                                                                                                                                        #> [12] \" The RT zone is established to provide land areas for low density residential townhouse development at approximately nine units per acre which may be appropriate for infill sites in proximity to neighborhoods of low density single-unit, two-unit, and multi-unit up to four units dwellings. \"                                                                                    #> [13] \" The RMF zone is established to provide land areas for multi-unit residential development and to enhance or preserve long-term affordability of housing. The zone would also permit limited neighborhood-serving commercial uses. \""},{"path":"https://wcurrangroome.github.io/municoder/reference/build_endpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function to build an API endpoint — build_endpoint","title":"A helper function to build an API endpoint — build_endpoint","text":"helper function build API endpoint","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/build_endpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function to build an API endpoint — build_endpoint","text":"","code":"build_endpoint(domain, subdomain = NULL, parameters = NULL)"},{"path":"https://wcurrangroome.github.io/municoder/reference/build_endpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function to build an API endpoint — build_endpoint","text":"domain first component API endpoint base api.municode.com/ subdomain second component API endpoint api.municode.com/domain parameters Named vector parameter-value pairs passed configure API endpoint","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_client_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain metadata for a jurisdiction's regulatory documents hosted on Municode — get_client_content","title":"Obtain metadata for a jurisdiction's regulatory documents hosted on Municode — get_client_content","text":"Corresponds , example: https://api.municode.com/ClientContent/12053","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_client_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain metadata for a jurisdiction's regulatory documents hosted on Municode — get_client_content","text":"","code":"get_client_content(client_id)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_client_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain metadata for a jurisdiction's regulatory documents hosted on Municode — get_client_content","text":"client_id code corresponding given client; can obtained get_clients_in_state()","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_client_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain metadata for a jurisdiction's regulatory documents hosted on Municode — get_client_content","text":"dataframe metadata product client (e.g., code ordinances, zoning, etc.)","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_client_content.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain metadata for a jurisdiction's regulatory documents hosted on Municode — get_client_content","text":"","code":"get_client_content(980) ## Alexandria, VA #> # A tibble: 2 × 10 #>   product_name       product_id latest_updated_date has_ordbank content_type_id #>   <chr>                   <int> <chr>               <lgl>       <chr>           #> 1 Code of Ordinances      10349 2025-02-21T19:58:16 TRUE        CODES           #> 2 Zoning                  12429 2025-02-20T12:31:09 TRUE        CODES           #> # ℹ 5 more variables: new_ord_count <int>, hide_in_library <lgl>, #> #   has_pdf_download_enabled <lgl>, has_pdf <lgl>, publication_id <int>"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_client_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns metadata about a given client — get_client_metadata","title":"Returns metadata about a given client — get_client_metadata","text":"Corresponds , example: https://api.municode.com/Clients/name?stateAbbr=VA&clientName=Alexandria","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_client_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns metadata about a given client — get_client_metadata","text":"","code":"get_client_metadata(state_abbreviation, client_name)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_client_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns metadata about a given client — get_client_metadata","text":"state_abbreviation two-character state code client_name name given client","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_client_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns metadata about a given client — get_client_metadata","text":"dataframe metadata specified client","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_client_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns metadata about a given client — get_client_metadata","text":"","code":"get_client_metadata(\"VA\", \"Alexandria\") #> # A tibble: 1 × 9 #>   client_id client_name state_id state_name state_abbreviation address    city   #>       <int> <chr>          <int> <chr>      <chr>              <chr>      <chr>  #> 1       980 Alexandria        46 Virginia   VA                 PO Box 178 Alexa… #> # ℹ 2 more variables: zip_code <chr>, website <chr>"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_clients_in_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Return metadata for all Municode clients in a given state — get_clients_in_state","title":"Return metadata for all Municode clients in a given state — get_clients_in_state","text":"Corresponds , example: https://api.municode.com/Clients/stateAbbr?stateAbbr=VA","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_clients_in_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return metadata for all Municode clients in a given state — get_clients_in_state","text":"","code":"get_clients_in_state(state_abbreviation)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_clients_in_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return metadata for all Municode clients in a given state — get_clients_in_state","text":"state_abbreviation two-character state code","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_clients_in_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return metadata for all Municode clients in a given state — get_clients_in_state","text":"dataframe clients","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_clients_in_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return metadata for all Municode clients in a given state — get_clients_in_state","text":"","code":"get_clients_in_state(\"VA\") #> # A tibble: 160 × 12 #>     name phone   client_id client_name    state_id state_name state_abbreviation #>    <int> <chr>       <int> <chr>             <int> <chr>      <chr>              #>  1     1 7875700      5211 Accomack Coun…       46 Virginia   VA                 #>  2     2 2965822      5215 Albemarle Cou…       46 Virginia   VA                 #>  3     3 8384433       980 Alexandria           46 Virginia   VA                 #>  4     4 8636600      5217 Alleghany Cou…       46 Virginia   VA                 #>  5     5 3695001      7988 Altavista            46 Virginia   VA                 #>  6     6 9467885      7995 Amherst              46 Virginia   VA                 #>  7     7 9469400      5219 Amherst County       46 Virginia   VA                 #>  8     8 3528268      8010 Appomattox           46 Virginia   VA                 #>  9     9 7989219      8026 Ashland              46 Virginia   VA                 #> 10    10 2455610      5227 Augusta County       46 Virginia   VA                 #> # ℹ 150 more rows #> # ℹ 5 more variables: address <chr>, address2 <chr>, city <chr>, #> #   zip_code <int>, website <chr>"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Get text and metadata for a given node within a given ordinance — get_codes_content","title":"Get text and metadata for a given node within a given ordinance — get_codes_content","text":"Corresponds , example: https://api.municode.com/CodesContent?jobId=426172&nodeId=THZOORALVI&productId=12429","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get text and metadata for a given node within a given ordinance — get_codes_content","text":"","code":"get_codes_content(node_id = NULL, product_id)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get text and metadata for a given node within a given ordinance — get_codes_content","text":"node_id unique identifier node within specified product (ordinance) product_id unique identifier product","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get text and metadata for a given node within a given ordinance — get_codes_content","text":"dataframe content metadata pertaining specific node within ordinance","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_content.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get text and metadata for a given node within a given ordinance — get_codes_content","text":"","code":"get_codes_content(node_id = \"SUHITA\", product_id = \"12429\") #> # A tibble: 3 × 16 #>   id    heading node_type content node_depth has_children parent_id doc_order_id #>   <chr> <chr>   <chr>     <chr>        <int> <lgl>        <chr>            <int> #> 1 SUHI… Supple… current   \" The …         NA NA           NA                  NA #> 2 ARTI… ARTICL… next       NA              1 TRUE         12429                3 #> 3 THZO… THE ZO… previous   NA              1 FALSE        12429                1 #> # ℹ 8 more variables: node_key <lgl>, is_updated <lgl>, is_amended <lgl>, #> #   has_amended_descendant <lgl>, compare_status <int>, doc_type <int>, #> #   depth_override <lgl>, chunk_group_starting_id <lgl>"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_toc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Table of Contents for an ordinance — get_codes_toc","title":"Get the Table of Contents for an ordinance — get_codes_toc","text":"Corresponds , example: https://api.municode.com/codesToc?jobId=426172&productId=12429","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_toc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Table of Contents for an ordinance — get_codes_toc","text":"","code":"get_codes_toc(job_id, product_id)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_toc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Table of Contents for an ordinance — get_codes_toc","text":"job_id unique identifier job product_id unique identifier product","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_toc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Table of Contents for an ordinance — get_codes_toc","text":"dataframe TOC sections associated metadata","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_toc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Table of Contents for an ordinance — get_codes_toc","text":"","code":"result = get_codes_toc(job_id = 426172, product_id = 12429)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_toc_breadcrumb.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about a given node's ancestor(s) — get_codes_toc_breadcrumb","title":"Get information about a given node's ancestor(s) — get_codes_toc_breadcrumb","text":"Corresponds , example: https://api.municode.com/codesToc/breadcrumb?jobId=426172&nodeId=THZOORALVI&productId=12429","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_toc_breadcrumb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about a given node's ancestor(s) — get_codes_toc_breadcrumb","text":"","code":"get_codes_toc_breadcrumb(job_id, node_id, product_id)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_toc_breadcrumb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about a given node's ancestor(s) — get_codes_toc_breadcrumb","text":"job_id unique identifier job node_id unique identifier node within specified product (ordinance) product_id unique identifier product","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_toc_children.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about a given node's children — get_codes_toc_children","title":"Get information about a given node's children — get_codes_toc_children","text":"Corresponds , example: https://api.municode.com/codesToc/children?jobId=426172&nodeId=ARTIGERE&productId=12429","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_toc_children.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about a given node's children — get_codes_toc_children","text":"","code":"get_codes_toc_children(job_id, node_id, product_id)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_toc_children.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about a given node's children — get_codes_toc_children","text":"job_id unique identifier job node_id unique identifier node within specified product (ordinance) product_id unique identifier product","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_codes_toc_children.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information about a given node's children — get_codes_toc_children","text":"","code":"get_codes_toc_children(job_id = 426172, node_id = \"ARTIGERE\", product_id = 12429) #> # A tibble: 9 × 16 #>    name id       heading node_depth has_children parent_id doc_order_id children #>   <int> <chr>    <chr>        <int> <lgl>        <chr>            <int> <lgl>    #> 1     1 ARTIGER… Sec. 1…          2 FALSE        ARTIGERE             4 NA       #> 2     2 ARTIGER… 1-101 …          2 FALSE        ARTIGERE             5 NA       #> 3     3 ARTIGER… 1-102 …          2 FALSE        ARTIGERE             6 NA       #> 4     4 ARTIGER… Sec. 1…          2 FALSE        ARTIGERE             7 NA       #> 5     5 ARTIGER… Sec. 1…          2 FALSE        ARTIGERE             8 NA       #> 6     6 ARTIGER… Sec. 1…          2 FALSE        ARTIGERE             9 NA       #> 7     7 ARTIGER… Sec. 1…          2 FALSE        ARTIGERE            10 NA       #> 8     8 ARTIGER… Sec. 1…          2 FALSE        ARTIGERE            11 NA       #> 9     9 ARTIGER… Sec. 1…          2 FALSE        ARTIGERE            12 NA       #> # ℹ 8 more variables: node_key <lgl>, is_updated <lgl>, is_amended <lgl>, #> #   has_amended_descendant <lgl>, compare_status <int>, doc_type <int>, #> #   depth_override <lgl>, chunk_group_starting_id <lgl>"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_core_content_ordinances.html","id":null,"dir":"Reference","previous_headings":"","what":"Return information about all ordinances of a given type (e.g., zoning) for a given year — get_core_content_ordinances","title":"Return information about all ordinances of a given type (e.g., zoning) for a given year — get_core_content_ordinances","text":"Corresponds , example: https://api.municode.com/CoreContent/Ordinances?nodeId=2023&productId=12429","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_core_content_ordinances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return information about all ordinances of a given type (e.g., zoning) for a given year — get_core_content_ordinances","text":"","code":"get_core_content_ordinances(product_id, node_id = NULL)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_core_content_ordinances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return information about all ordinances of a given type (e.g., zoning) for a given year — get_core_content_ordinances","text":"product_id unique code identifying product (e.g., zoning ordinance) node_id year ordinances requested","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_core_content_ordinances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return information about all ordinances of a given type (e.g., zoning) for a given year — get_core_content_ordinances","text":"dataframe comprising ordinances","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_endpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function to send a GET request to an API endpoint — get_endpoint","title":"A helper function to send a GET request to an API endpoint — get_endpoint","text":"helper function send GET request API endpoint","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_endpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function to send a GET request to an API endpoint — get_endpoint","text":"","code":"get_endpoint(endpoint)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_endpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function to send a GET request to an API endpoint — get_endpoint","text":"endpoint API endpoint","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_jobs_latest.html","id":null,"dir":"Reference","previous_headings":"","what":"This returns data on the most recent job (e.g., the current zoning ordinance, reflecting amendments) — get_jobs_latest","title":"This returns data on the most recent job (e.g., the current zoning ordinance, reflecting amendments) — get_jobs_latest","text":"Corresponds , example: https://api.municode.com/Jobs/latest/12429","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_jobs_latest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This returns data on the most recent job (e.g., the current zoning ordinance, reflecting amendments) — get_jobs_latest","text":"","code":"get_jobs_latest(product_id)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_jobs_latest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This returns data on the most recent job (e.g., the current zoning ordinance, reflecting amendments) — get_jobs_latest","text":"product_id unique identifier product","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_jobs_product.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns data on all jobs for a given product (e.g., all historical versions of the zoning ordinance) — get_jobs_product","title":"Returns data on all jobs for a given product (e.g., all historical versions of the zoning ordinance) — get_jobs_product","text":"Corresponds , example: https://api.municode.com/Jobs/product/12429","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_jobs_product.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns data on all jobs for a given product (e.g., all historical versions of the zoning ordinance) — get_jobs_product","text":"","code":"get_jobs_product(product_id)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_jobs_product.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns data on all jobs for a given product (e.g., all historical versions of the zoning ordinance) — get_jobs_product","text":"product_id unique identifier product","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_ordinances_toc.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain metadata about a given ordinance over time — get_ordinances_toc","title":"Obtain metadata about a given ordinance over time — get_ordinances_toc","text":"Corresponds , example: https://api.municode.com/ordinancesToc?nodeId=2023&productId=12429","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_ordinances_toc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain metadata about a given ordinance over time — get_ordinances_toc","text":"","code":"get_ordinances_toc(product_id, node_id = NA)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_ordinances_toc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain metadata about a given ordinance over time — get_ordinances_toc","text":"product_id unique identifier product node_id unique identifier node within specified product (ordinance)","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_ordinances_toc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain metadata about a given ordinance over time — get_ordinances_toc","text":"","code":"get_ordinances_toc(node_id = 2023, product_id = 12429) #> # A tibble: 1 × 8 #>   id    heading node_depth has_children doc_order_id children OrdCount DataType #>   <chr> <chr>        <int> <lgl>               <int> <list>      <int>    <int> #> 1 12429 Zoning           0 TRUE                    0 <list>          0        1"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_ordinances_toc_breadcrumb.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the ancestors of a given node in an ordinance's Table of Contents Corresponds to, for example: https://api.municode.com/ordinancesToc/breadcrumb?nodeId=2023&productId=12429 — get_ordinances_toc_breadcrumb","title":"Get the ancestors of a given node in an ordinance's Table of Contents Corresponds to, for example: https://api.municode.com/ordinancesToc/breadcrumb?nodeId=2023&productId=12429 — get_ordinances_toc_breadcrumb","text":"Get ancestors given node ordinance's Table Contents Corresponds , example: https://api.municode.com/ordinancesToc/breadcrumb?nodeId=2023&productId=12429","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_ordinances_toc_breadcrumb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the ancestors of a given node in an ordinance's Table of Contents Corresponds to, for example: https://api.municode.com/ordinancesToc/breadcrumb?nodeId=2023&productId=12429 — get_ordinances_toc_breadcrumb","text":"","code":"get_ordinances_toc_breadcrumb(product_id, node_id)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_ordinances_toc_breadcrumb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the ancestors of a given node in an ordinance's Table of Contents Corresponds to, for example: https://api.municode.com/ordinancesToc/breadcrumb?nodeId=2023&productId=12429 — get_ordinances_toc_breadcrumb","text":"product_id unique identifier product node_id unique identifier node within specified product (ordinance)","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_ordinances_toc_children.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the children of a given node in an ordinance's Table of Contents — get_ordinances_toc_children","title":"Get the children of a given node in an ordinance's Table of Contents — get_ordinances_toc_children","text":"Corresponds , example: https://api.municode.com/ordinancesToc/children?productId=12429&nodeId=2023","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_ordinances_toc_children.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the children of a given node in an ordinance's Table of Contents — get_ordinances_toc_children","text":"","code":"get_ordinances_toc_children(product_id, node_id)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_ordinances_toc_children.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the children of a given node in an ordinance's Table of Contents — get_ordinances_toc_children","text":"product_id unique identifier product node_id unique identifier node within specified product (ordinance)","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_product_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata about a specified product — get_product_metadata","title":"Get metadata about a specified product — get_product_metadata","text":"Corresponds , example: https://api.municode.com/Products/name?clientId=12053&productName=code++ordinances","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_product_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata about a specified product — get_product_metadata","text":"","code":"get_product_metadata(client_id, product_name)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_product_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata about a specified product — get_product_metadata","text":"client_id unique identifier client product_name name product type, e.g., \"Code Ordinances\"","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_product_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get metadata about a specified product — get_product_metadata","text":"","code":"get_product_metadata(client_id = 12053, product_name = \"Code of Ordinances\")"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Return metadata about states (and similar) as used by municode — get_states","title":"Return metadata about states (and similar) as used by municode — get_states","text":"Corresponds : https://api.municode.com/States/","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return metadata about states (and similar) as used by municode — get_states","text":"","code":"get_states()"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_states.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return metadata about states (and similar) as used by municode — get_states","text":"dataframe three columns: state_id, state_name, state_abbreviation.","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_states_abbreviation.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up state metadata given a state abbreviation — get_states_abbreviation","title":"Look up state metadata given a state abbreviation — get_states_abbreviation","text":"Corresponds (example): https://api.municode.com/States/abbr?stateAbbr=ak","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_states_abbreviation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up state metadata given a state abbreviation — get_states_abbreviation","text":"","code":"get_states_abbreviation(state_abbreviation)"},{"path":"https://wcurrangroome.github.io/municoder/reference/get_states_abbreviation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up state metadata given a state abbreviation — get_states_abbreviation","text":"state_abbreviation two-character state abbreviation","code":""},{"path":"https://wcurrangroome.github.io/municoder/reference/get_states_abbreviation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up state metadata given a state abbreviation — get_states_abbreviation","text":"dataframe three columns: state_id, state_name, state_abbreviation.","code":""}]
